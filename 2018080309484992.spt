import java.io.IOException;  
  
import org.apache.logging.log4j.LogManager;  
import org.apache.logging.log4j.Logger;  
  
import org.springframework.http.HttpStatus;  
import org.springframework.web.bind.annotation.ControllerAdvice;  
import org.springframework.web.bind.annotation.ExceptionHandler;  
import org.springframework.web.bind.annotation.ResponseStatus;  
import org.springframework.web.bind.annotation.RestController;  
import org.springframework.web.context.request.WebRequest;  
import org.springframework.web.servlet.ModelAndView;  
import org.springframework.web.servlet.NoHandlerFoundException;  
  
@ControllerAdvice(annotations = {RestController.class})  
public class ExceptionReaper {  
      
    private static final Logger logger = LogManager.getLogger(ExceptionReaper.class);  
  
    @ExceptionHandler(value = { IOException.class , RuntimeException.class })  
    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)  
    public ModelAndView exception(Exception exception, WebRequest request) {  
        logger.info("Catch an exception", exception);  
        return  new ModelAndView("error/errorPage");  
    }  
      
    @ExceptionHandler(value = { NoHandlerFoundException.class })  
    @ResponseStatus(HttpStatus.NOT_FOUND)  
    public ModelAndView noMapping(Exception exception, WebRequest request) {  
        logger.info("No mapping exception", exception);  
        return  new ModelAndView("error/notFound");  
    }  
  
}  